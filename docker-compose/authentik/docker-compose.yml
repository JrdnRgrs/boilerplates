version: '3.3'

services:
  server:
    image: ghcr.io/goauthentik/server:latest
    container_name: Authentik-Server
    restart: unless-stopped
    command: server
    environment:
      - AUTHENTIK_REDIS__HOST
      - AUTHENTIK_POSTGRESQL__HOST
      - AUTHENTIK_POSTGRESQL__USER
      - AUTHENTIK_POSTGRESQL__NAME
      - AUTHENTIK_POSTGRESQL__PASSWORD
      - AUTHENTIK_SECRET_KEY
      - AUTHENTIK_PORT_HTTP
      - AUTHENTIK_PORT_HTTPS
      # AUTHENTIK_ERROR_REPORTING__ENABLED: "true"
    volumes:
      - $DATA_BASE_PATH/authentik/server/media:/media
      - $DATA_BASE_PATH/authentik/server/custom-templates:/templates
      - $DATA_BASE_PATH/authentik/geoip:/geoip
    ports:
      - 1080:9000
      - 1443:9443
    networks:
      - authentik_default
      - shared
      
  worker:
    image: ghcr.io/goauthentik/server:latest
    container_name: Authentik-Worker
    restart: unless-stopped
    command: worker
    environment:
      - AUTHENTIK_REDIS__HOST
      - AUTHENTIK_POSTGRESQL__HOST
      - AUTHENTIK_POSTGRESQL__USER
      - AUTHENTIK_POSTGRESQL__NAME
      - AUTHENTIK_POSTGRESQL__PASSWORD
      - AUTHENTIK_SECRET_KEY
      - AUTHENTIK_PORT_HTTP
      - AUTHENTIK_PORT_HTTPS
      # AUTHENTIK_ERROR_REPORTING__ENABLED: "true"
    user: root
    volumes:
      - $DATA_BASE_PATH/authentik/server/media:/media
      - $DATA_BASE_PATH/authentik/server/certs:/certs
      - /var/run/docker.sock:/var/run/docker.sock
      - $DATA_BASE_PATH/authentik/server/custom-templates:/templates
      - $DATA_BASE_PATH/authentik/geoip:/geoip
    networks:
      - authentik_default

  postgresql:
    image: docker.io/library/postgres:12-alpine
    container_name: Authentik-PostgreSQL
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}"]
      start_period: 20s
      interval: 30s
      retries: 5
      timeout: 5s
    volumes:
      - $DATA_BASE_PATH/authentik/postgresql:/var/lib/postgresql/data
    environment:
      - POSTGRES_PASSWORD
      - POSTGRES_USER
      - POSTGRES_DB
    networks:
      - authentik_default
  
  redis:
    image: docker.io/library/redis:alpine
    container_name: Authentik-Redis
    command: --save 60 1 --loglevel warning
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "redis-cli ping | grep PONG"]
      start_period: 20s
      interval: 30s
      retries: 5
      timeout: 3s
    volumes:
      - $DATA_BASE_PATH/authentik/redis:/data
    networks:
      - authentik_default

networks:
  authentik_default:

  shared:
      external: true
      name: shared